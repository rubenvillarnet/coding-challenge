{"version":3,"sources":["lib/theme.js","lib/redux/reducers/users.js","lib/redux/reducers/snackbar.js","lib/redux/reducers/index.js","lib/redux/action-types.js","lib/redux/store.js","lib/dataprovider.js","lib/redux/actions.js","lib/utils.js","components/UserDetail/view.js","components/UserDetail/styled.js","components/UserDetail/index.js","lib/healthCheck.js","components/TopBar/view.js","components/TopBar/styled.js","components/TopBar/index.js","components/UsersList/view.js","components/UsersList/styled.js","components/UsersList/index.js","components/SnackbarBottom/view.js","components/SnackbarBottom/index.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","initialStore","userData","userInfo","status","message","combineReducers","users","store","arguments","length","undefined","action","type","Object","objectSpread","setToNull","snackbar","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","dataprovider","classCallCheck","this","service","axios","create","baseURL","concat","process","console","log","get","then","response","data","catch","error","id","user","post","name","birthdate","patch","delete","dismissUser","listUsers","dispatch","showSnackbar","formatDate","date","moment","format","formatTime","time","UserDetail","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","edit","selectedDate","Date","e","preventDefault","newDate","setState","_this2","currentTarget","elements","edituser","_id","value","editUserData","now","_this3","_this$props","classes","react_default","a","createElement","Typography","variant","onSubmit","editUser","className","form","FormControl","formControl","InputLabel","htmlFor","Input","required","defaultValue","material_ui_pickers_esm","label","onChange","handleDateChange","animateYearScrolling","disableFuture","Button","color","updateButton","List","ListItem","ListItemText","primary","secondary","onClick","toggleEdit","closeUserInfo","closeButton","Component","styles","display","flexDirection","marginBottom","spacing","marginLeft","withStyles","view","mapDispatchToProps","connect","styled","HealthCheck","Topbar","health","result","isAlive","AppBar","position","Toolbar","toolBar","size","checkDB","justifyContent","alignItems","maxWidth","UsersList","rightDrawer","getUser","deleteUser","info","newUser","newUserData","toggleDrawer","shown","_this4","Fragment","TopBar","content","tableContainer","component","title","Paper","Table","TableHead","TableRow","TableCell","rowTitle","TableBody","map","key","showUserInfo","AccountCircle_default","Delete_default","Fab","aria-label","newUserButton","Add_default","Drawer","drawer","anchor","open","onClose","NewUserContainer","formContainer","align","newUserForm","createUser","Close_default","Modal","modalOverlay","modalBox","components_UserDetail","margin","marginTop","bottom","right","padding","fontSize","tablePagination","newUserContainer","minWidth","height","width","_state$users","SnackbarBottom","hideSnackbar","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","App","react_router","exact","path","components_SnackbarBottom","Boolean","window","location","hostname","match","ReactDOM","render","es","utils","MomentUtils","react_router_dom","ThemeProvider","CssBaseline","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15e5e4d2.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\n\nexport const theme = createMuiTheme()\n","import { GET_USER, DISMISS_USER, LIST_USERS } from '../action-types'\n\nconst initialStore = {\n  userData: [],\n  userInfo: null\n}\n\nexport const users = (store = initialStore, action) => {\n  switch (action.type) {\n    case LIST_USERS:\n      return {\n        ...store,\n        userData: action.userData\n      }\n    case GET_USER:\n      return {\n        ...store,\n        userInfo: action.userInfo\n      }\n    case DISMISS_USER:\n      return {\n        ...store,\n        userInfo: action.setToNull\n      }\n    default:\n      return store\n  }\n}\n","import { SHOW_SNACKBAR, HIDE_SNACKBAR } from '../action-types'\n\nconst initialStore = {\n  status: false,\n  message: ''\n}\n\nexport const snackbar = (store = initialStore, action) => {\n  switch (action.type) {\n    case SHOW_SNACKBAR:\n      return {\n        ...store,\n        status: true,\n        message: action.message\n      }\n    case HIDE_SNACKBAR:\n      return {\n        ...store,\n        status: false,\n        message: ''\n      }\n    default:\n      return store\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport { users } from './users'\nimport { snackbar } from './snackbar'\n\nexport default combineReducers({\n  users,\n  snackbar\n})\n","export const DISMISS_USER = 'DISMISS_USER'\nexport const LIST_USERS = 'LIST_USERS'\nexport const GET_USER = 'GET_USER'\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR'\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR'\n","import { createStore, applyMiddleware } from 'redux'\nimport reducer from './reducers'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n","import axios from 'axios'\n\nclass dataprovider {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_URL}/api`\n    })\n  }\n\n  listUsers() {\n    console.log(process.env.REACT_APP_URL)\n    return this.service\n      .get(`users`)\n      .then(response => response.data)\n      .catch(error => error)\n  }\n\n  getUser(id) {\n    return this.service\n      .get(`users/${id}`)\n      .then(response => response.data)\n      .catch(error => error)\n  }\n\n  newUser(user) {\n    return this.service\n      .post('users', user)\n      .then(response => response)\n      .catch(error => error)\n  }\n\n  edituser(user) {\n    const { id, name, birthdate } = user\n    return this.service\n      .patch(`users/${id}`, { name, birthdate })\n      .then(response => response)\n      .catch(error => error)\n  }\n\n  deleteUser(id) {\n    return this.service\n      .delete(`users/${id}`)\n      .then(response => response.data)\n      .catch(error => error)\n  }\n}\n\nexport default dataprovider\n","import dataprovider from '../dataprovider'\nimport { DISMISS_USER, LIST_USERS, GET_USER, SHOW_SNACKBAR, HIDE_SNACKBAR } from './action-types'\n\nconst data = new dataprovider()\n\nexport const dismissUser = () => {\n  return {\n    type: DISMISS_USER,\n    setToNull: null\n  }\n}\n\nexport const listUsers = () => {\n  return dispatch => {\n    return data.listUsers().then(userData => dispatch({ type: LIST_USERS, userData }))\n  }\n}\n\nexport const getUser = id => {\n  return dispatch => {\n    return data\n      .getUser(id)\n      .then(userInfo => dispatch({ type: GET_USER, userInfo: userInfo }))\n      .catch(error => error)\n  }\n}\n\nexport const showSnackbar = message => {\n  return {\n    type: SHOW_SNACKBAR,\n    message: message\n  }\n}\n\nexport const hideSnackbar = () => {\n  return {\n    type: HIDE_SNACKBAR\n  }\n}\n","import moment from 'moment'\nimport 'moment/locale/es'\n\nexport const formatDate = date => moment(date).format('DD/MM/YYYY')\nexport const formatTime = time => moment(time).format('HH:mm')\n","import React, { Component } from 'react'\nimport dataprovider from '../../lib/dataprovider'\nimport PropTypes from 'prop-types'\nimport { formatDate, formatTime } from '../../lib/utils'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\n\nimport { Button, Typography, List, ListItem, ListItemText, FormControl, InputLabel, Input } from '@material-ui/core'\n\nexport default class UserDetail extends Component {\n  constructor(props) {\n    super(props)\n    this.data = new dataprovider()\n    this.state = {\n      edit: false,\n      selectedDate: new Date()\n    }\n  }\n\n  closeUserInfo(e) {\n    e.preventDefault()\n    this.props.dismissUser()\n  }\n\n  handleDateChange(newDate) {\n    this.setState({\n      ...this.state,\n      selectedDate: newDate\n    })\n  }\n\n  editUser(e) {\n    e.preventDefault()\n    const { name } = e.currentTarget.elements\n    this.data\n      .edituser({\n        id: this.props.userInfo._id,\n        name: name.value,\n        birthdate: this.state.selectedDate\n      })\n      .then(editUserData => {\n        if (editUserData.status === 200) {\n          const now = formatTime(new Date())\n          this.props.showSnackbar(`User updated at ${now}`)\n        } else {\n          this.props.showSnackbar(`Something wrong has happened. Status: ${editUserData.status}`)\n        }\n        name.value = ''\n        this.setState({\n          ...this.state,\n          selectedDate: new Date()\n        })\n        this.props.listUsers()\n      })\n  }\n\n  toggleEdit() {\n    this.setState({\n      ...this.state,\n      edit: !this.state.edit\n    })\n  }\n\n  render() {\n    const { userInfo, classes } = this.props\n    const { name, birthdate } = userInfo\n    return (\n      <div>\n        <Typography variant=\"h5\">User info</Typography>\n        {this.state.edit ? (\n          <form onSubmit={e => this.editUser(e)} className={classes.form}>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"name\">Name</InputLabel>\n              <Input required={true} defaultValue={name} type=\"text\" id=\"name\" />\n            </FormControl>\n            <KeyboardDatePicker\n              label=\"Birthday\"\n              value={birthdate}\n              onChange={newDate => this.handleDateChange(newDate)}\n              animateYearScrolling\n              disableFuture\n              format=\"DD/MM/YYYY\"\n            />\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\" className={classes.updateButton}>\n              Update User\n            </Button>\n          </form>\n        ) : (\n          <List>\n            <ListItem>\n              <ListItemText primary=\"Name:\" secondary={name} />{' '}\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"Birthdate:\" secondary={formatDate(birthdate)} />\n            </ListItem>\n          </List>\n        )}\n\n        <Button variant=\"contained\" color=\"primary\" onClick={() => this.toggleEdit()}>\n          {this.state.edit ? 'Cancel' : 'Edit'}\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={e => this.closeUserInfo(e)} className={classes.closeButton}>\n          Close\n        </Button>\n      </div>\n    )\n  }\n}\n\nUserDetail.propTypes = {\n  userInfo: PropTypes.shape({\n    _id: PropTypes.string,\n    name: PropTypes.string,\n    birthdate: PropTypes.string\n  }),\n  dismissUser: PropTypes.func,\n  showSnackbar: PropTypes.func,\n  listUsers: PropTypes.func,\n  classes: PropTypes.object\n}\n","import { withStyles } from '@material-ui/styles'\nimport view from './view'\nimport { theme } from '../../lib/theme'\n\nconst styles = {\n  form: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  formControl: {\n    marginBottom: theme.spacing(2)\n  },\n  updateButton: {\n    marginBottom: theme.spacing(4)\n  },\n  closeButton: {\n    marginLeft: theme.spacing(2)\n  }\n}\n\nexport default withStyles(styles)(view)\n","import { connect } from 'react-redux'\nimport { listUsers, dismissUser, showSnackbar } from '../../lib/redux/actions'\nimport styled from './styled'\n\nconst mapStateToProps = state => {\n  const { users } = state\n  return { userInfo: users.userInfo }\n}\n\nconst mapDispatchToProps = {\n  listUsers,\n  dismissUser,\n  showSnackbar\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(styled)\n","import axios from 'axios'\n\nclass HealthCheck {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_URL\n    })\n  }\n\n  status() {\n    return this.service\n      .get(`health`)\n      .then(response => response.data)\n      .catch(error => error)\n  }\n}\n\nexport default HealthCheck\n","import React, { Component } from 'react'\nimport HealthCheck from '../../lib/healthCheck'\nimport PropTypes from 'prop-types'\n\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core'\n\nexport default class Topbar extends Component {\n  constructor(props) {\n    super(props)\n    this.health = new HealthCheck()\n  }\n\n  checkDB() {\n    this.health.status().then(result => {\n      this.props.showSnackbar(`Database status: ${result.isAlive ? 'online' : 'offline'}`)\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <AppBar position=\"static\">\n        <Toolbar className={classes.toolBar}>\n          <Typography variant=\"h6\">React Test</Typography>\n          <Button variant=\"contained\" size=\"small\" onClick={() => this.checkDB()}>\n            Check database\n          </Button>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nTopbar.propTypes = {\n  classes: PropTypes.object,\n  showSnackbar: PropTypes.func\n}\n","import { withStyles } from '@material-ui/styles'\nimport view from './view'\n\nconst styles = {\n  toolBar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    maxWidth: '1080px'\n  }\n}\n\nexport default withStyles(styles)(view)\n","import { connect } from 'react-redux'\nimport { showSnackbar } from '../../lib/redux/actions'\n\nimport styled from './styled'\n\nconst mapDispatchToProps = { showSnackbar }\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(styled)\n","import React, { Component } from 'react'\nimport UserDetail from '../UserDetail'\nimport Topbar from '../TopBar'\nimport dataprovider from '../../lib/dataprovider'\nimport { formatDate, formatTime } from '../../lib/utils'\n\nimport PropTypes from 'prop-types'\n\nimport { KeyboardDatePicker } from '@material-ui/pickers'\n\nimport {\n  Typography,\n  Drawer,\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Modal,\n  Fab\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport AddIcon from '@material-ui/icons/Add'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\n\nexport default class UsersList extends Component {\n  constructor(props) {\n    super(props)\n    this.data = new dataprovider()\n    this.state = {\n      rightDrawer: false,\n      selectedDate: new Date()\n    }\n  }\n\n  componentDidMount() {\n    this.props.listUsers()\n  }\n\n  showUserInfo(e, id) {\n    e.preventDefault()\n    this.props.getUser(id)\n  }\n\n  handleDateChange(newDate) {\n    this.setState({\n      ...this.state,\n      selectedDate: newDate\n    })\n  }\n\n  deleteUser(e, id) {\n    e.preventDefault()\n    this.data.deleteUser(id).then(info => {\n      this.props.showSnackbar(`User ${info.name} was deleted sucessfuly.`)\n\n      this.props.listUsers()\n    })\n  }\n\n  createUser(e) {\n    e.preventDefault()\n    const { name } = e.currentTarget.elements\n    this.data\n      .newUser({\n        name: name.value,\n        birthdate: this.state.selectedDate\n      })\n      .then(newUserData => {\n        this.toggleDrawer(false)\n        if (newUserData.status === 200) {\n          const now = formatTime(new Date())\n          this.props.showSnackbar(`User ${newUserData.data.name} created at ${now} with id ${newUserData.data._id}`)\n        } else {\n          this.props.showSnackbar(`Something wrong has happened. Status: ${newUserData.status}`)\n        }\n        name.value = ''\n        this.setState({\n          ...this.state,\n          selectedDate: new Date()\n        })\n        this.props.listUsers()\n      })\n  }\n\n  toggleDrawer(shown) {\n    this.setState({\n      ...this.state,\n      rightDrawer: shown\n    })\n  }\n\n  render() {\n    const { userData, userInfo, classes } = this.props\n    return (\n      <React.Fragment>\n        <Topbar />\n        <div className={classes.content}>\n          {userData.length !== 0 ? (\n            <div className={classes.tableContainer}>\n              <Typography component=\"h1\" variant=\"h4\" className={classes.title}>\n                Users list\n              </Typography>\n              <Paper className={classes.title}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className={classes.rowTitle}>First Name</TableCell>\n                      <TableCell className={classes.rowTitle}>Birthdate</TableCell>\n                      <TableCell className={classes.rowTitle}>More Info</TableCell>\n                      <TableCell className={classes.rowTitle}>Delete user</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {userData.map(user => {\n                      return (\n                        <TableRow key={user._id}>\n                          <TableCell>{user.name}</TableCell>\n                          <TableCell>{formatDate(user.birthdate)}</TableCell>\n                          <TableCell>\n                            <Button onClick={e => this.showUserInfo(e, user._id)} color=\"primary\">\n                              <AccountCircleIcon />\n                              Info\n                            </Button>\n                          </TableCell>\n                          <TableCell>\n                            <Button onClick={e => this.deleteUser(e, user._id)} color=\"secondary\" variant=\"contained\">\n                              <DeleteIcon />\n                              Delete\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      )\n                    })}\n                  </TableBody>\n                </Table>\n              </Paper>\n\n              <Fab variant=\"extended\" color=\"primary\" aria-label=\"Add\" className={classes.newUserButton} onClick={() => this.toggleDrawer(true)}>\n                <AddIcon />\n                New User\n              </Fab>\n              <Drawer className={classes.drawer} anchor=\"right\" open={this.state.rightDrawer} onClose={() => this.toggleDrawer(false)}>\n                <div className={classes.NewUserContainer}>\n                  <Paper className={classes.formContainer}>\n                    <Typography component=\"h2\" variant=\"h6\" align=\"center\">\n                      Create new user\n                    </Typography>\n                    <form className={classes.newUserForm} onSubmit={e => this.createUser(e)}>\n                      <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"name\">Name</InputLabel>\n                        <Input type=\"text\" id=\"name\" required />\n                      </FormControl>\n                      <KeyboardDatePicker\n                        label=\"Birthday\"\n                        value={this.state.selectedDate}\n                        onChange={newDate => this.handleDateChange(newDate)}\n                        animateYearScrolling\n                        disableFuture\n                        format=\"DD/MM/YYYY\"\n                      />\n                      <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n                        Create User\n                      </Button>\n                    </form>\n                  </Paper>\n                  <Fab color=\"secondary\" className={classes.closeButton} onClick={() => this.toggleDrawer(false)}>\n                    <CloseIcon />\n                  </Fab>\n                </div>\n              </Drawer>\n            </div>\n          ) : (\n            <p>Loading...</p>\n          )}\n          <Modal open={!!userInfo} onClose={() => this.props.dismissUser()} className={classes.modalOverlay}>\n            <Paper className={classes.modalBox}>{userInfo ? <UserDetail /> : null}</Paper>\n          </Modal>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nUsersList.propTypes = {\n  user: PropTypes.object,\n  userData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      birthdate: PropTypes.string\n    })\n  ),\n  userInfo: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  listUsers: PropTypes.func,\n  getUser: PropTypes.func,\n  dismissUser: PropTypes.func,\n  showSnackbar: PropTypes.func,\n  classes: PropTypes.object\n}\n","import { withStyles } from '@material-ui/styles'\nimport view from './view'\nimport { theme } from '../../lib/theme'\n\nconst styles = {\n  content: {\n    margin: 'auto',\n    marginTop: theme.spacing(4)\n  },\n  newUserButton: {\n    position: 'absolute',\n    bottom: '50px',\n    right: '50px'\n  },\n  title: {\n    marginBottom: theme.spacing(2)\n  },\n  tableContainer: {\n    maxWidth: '1080px',\n    margin: 'auto',\n    padding: theme.spacing(2)\n  },\n  rowTitle: {\n    fontSize: '1.1em'\n  },\n  tablePagination: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: theme.spacing(2)\n  },\n  newUserContainer: {\n    minWidth: '60vw',\n    margin: theme.spacing(2),\n    position: 'relative',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  formContainer: {\n    padding: theme.spacing(2)\n  },\n  newUserForm: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '250px'\n  },\n  formControl: {\n    marginBottom: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4)\n  },\n  modalOverlay: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  modalBox: {\n    width: '360px',\n    height: '460px',\n    padding: theme.spacing(2),\n    margin: 'auto'\n  }\n}\n\nexport default withStyles(styles)(view)\n","import { connect } from 'react-redux'\nimport { listUsers, getUser, dismissUser, showSnackbar } from '../../lib/redux/actions'\n\nimport styled from './styled'\n\nconst mapDispatchToProps = {\n  listUsers,\n  getUser,\n  dismissUser,\n  showSnackbar\n}\n\nconst mapStateToProps = state => {\n  const { userData, userInfo } = state.users\n  return {\n    userData,\n    userInfo\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(styled)\n","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport { Snackbar, Button } from '@material-ui/core'\n\nexport default class SnackbarBottom extends Component {\n  render() {\n    const { status, message, hideSnackbar } = this.props\n    return (\n      <Snackbar\n        anchorOrigin={{\n          horizontal: 'center',\n          vertical: 'bottom'\n        }}\n        autoHideDuration={10000}\n        open={status}\n        onClose={() => hideSnackbar()}\n        message={message}\n        action={[\n          <Button color=\"secondary\" size=\"small\" key=\"undo\" onClick={() => hideSnackbar()}>\n            Close\n          </Button>\n        ]}\n      />\n    )\n  }\n}\n\nSnackbarBottom.propTypes = {\n  status: PropTypes.bool,\n  message: PropTypes.string,\n  hideSnackbar: PropTypes.func\n}\n","import { connect } from 'react-redux'\nimport { hideSnackbar } from '../../lib/redux/actions'\nimport view from './view'\n\nconst mapStateToProps = state => {\n  const { snackbar } = state\n  return {\n    status: snackbar.status,\n    message: snackbar.message\n  }\n}\n\nconst mapDispatchToProps = { hideSnackbar }\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(view)\n","import React from 'react'\nimport UsersList from './components/UsersList'\nimport { Switch, Route } from 'react-router-dom'\nimport SnackbarBottom from './components/SnackbarBottom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={UsersList} />\n      </Switch>\n      <SnackbarBottom />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA')\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.')\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { theme } from './lib/theme'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport MomentUtils from '@date-io/moment'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport { Provider } from 'react-redux'\nimport { store } from './lib/redux/store'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <Router>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <App />\n        </ThemeProvider>\n      </Router>\n    </MuiPickersUtilsProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}